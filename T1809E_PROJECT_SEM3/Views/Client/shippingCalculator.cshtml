@model T1809E_PROJECT_SEM3.Models.calPrice
@{
    ViewBag.Title = "shippingCalculator";
    Layout = "~/Views/Shared_Client/_Layout.cshtml";
}

    <style>
        .label {
            border-width: 0px;
            border: none;
            outline: none;
        }
    </style>

<section class="ftco-section ftco-destination">
    <div class="container">
        <div class="row">
            <div class="col-md-2"></div>
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Calculate how much you'll pay for your order</h4>
                    </div>
                    <div class="card-body">
                            @Html.AntiForgeryToken()
                        <div class="form-horizontal ">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row">
                                <div class="form-group col-6">
                                    @Html.LabelFor(model => model.TypeItemId,"Type Item", htmlAttributes: new { @class = "control-label col-md-6" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("TypeItemId", ViewBag.TypeItemId as SelectList, "-- Select Type Item --", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TypeItemId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group col-lg-6">
                                    @Html.LabelFor(model => model.ServiceId, "Service Type",htmlAttributes: new { @class = "control-label col-md-6" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ServiceId", EnumHelper.GetSelectList(typeof(T1809E_PROJECT_SEM3.Models.Service.EnumServiceType)), "-- Select Service --", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ServiceId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-lg-4">
                                    <label class="control-label col-lg-8">Weight (g)</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-2"></div>
                                <div class="form-group col-lg-4">
                                    @*@Html.LabelFor(model => model.Distance, "Distance (km)", htmlAttributes: new { @class = "control-label col-lg-6" })*@
                                    <label class="control-label col-lg-8">Distance (km)</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Distance, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-2"></div>
                            </div>
                            <div class="row">
                                <div class="form-group col-4 mt-2">
                                    <label class="control-label col-lg-6"></label>
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="button" value="Calculate Price" id="Cal_Price" class="btn btn-default" />
                                    </div>
                                </div>

                                <div class="form-group col-4">
                                    <label class="control-label col-lg-8">Price Ship ($):  &nbsp;   <span id="PriceShip" class=""></span></label>
                                </div>
                                <div class="form-group col-4" hidden id="DisplayPriceDiv">
                                    <label class="control-label col-lg-8">Calculator ($)</label>
                                    <div class="col-md-10">
                                        <span id="DisplayPrice" class=""></span>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="form-group col-md-12">
                                        <button type="button" class="btn btn-white">@Html.ActionLink("Back to HomePage", "Index")</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-2"></div>
        </div>
    </div>
</section>
@section Scripts
{
    <script type="text/javascript">
        $("#Cal_Price").click(function () {
            if ($('#Distance').val() == "" || $('#Weight').val() == ""  ) {
                Swal.fire({
                    title: 'Please input Distance and Weight !',
                    showClass: {
                        popup: 'animate__animated animate__fadeInDown'
                    },
                    hideClass: {
                        popup: 'animate__animated animate__fadeOutUp'
                    }
                })
                return;
            }
          
                if ($('#TypeItemId').val() == "" || $('#ServiceId').val() == ""  ) {
                    Swal.fire({
                        title: 'Please input Type  !',
                        showClass: {
                            popup: 'animate__animated animate__fadeInDown'
                        },
                        hideClass: {
                            popup: 'animate__animated animate__fadeOutUp'
                        }
                    });
                    return;
                }
            $.ajax({
                type: "POST",
                url: "../orders/CalPrice",
                data: JSON.stringify({
                    "Distance": $('#Distance').val(),
                    "Weight": $('#Weight').val(),
                    "ServiceId": $('#ServiceId').val(),
                    "TypeItemId": $('#TypeItemId').val(),
                })
                ,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $('#PriceShip').text(data.PriceShip);
                    $('#DisplayPrice').text(data.Display);
                    $('#DisplayPriceDiv').removeAttr('hidden');
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        });
    </script>
}