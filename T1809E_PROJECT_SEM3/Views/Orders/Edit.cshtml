@model T1809E_PROJECT_SEM3.Models.Order

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared_Admin/_Layout.cshtml";
}
<div class="breadcrumbs">
    <div class="breadcrumbs-inner">
        <div class="row m-0">
            <div class="col-sm-4">
                <div class="page-header float-left">
                    <div class="page-title">
                        <h1>Office Manage</h1>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="content">
    <div class="wrapper">
        <div class="row">
            <div class="col-sm-12">
                <section class="panel">

                    <div class="panel-body">
                        <div class="card">
                            <div class="card-body">

                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()

                                <div class="form-horizontal ">
                                    <h4>Order : @Model.ID</h4>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.ID)
                                    @Html.HiddenFor(model => model.CreateAt)
                                    @Html.HiddenFor(model => model.CreatedBy)
                                    <div class="row col-lg-12">
                                        <div class="form-group col-7">
                                            @Html.LabelFor(model => model.SenderName, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.SenderName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.SenderName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group col-6">
                                            @Html.LabelFor(model => model.SenderProvinceID, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("SenderProvinceID", null, "-- Select Province --", htmlAttributes: new { @class = "form-control", @id = "SenderProvinceID" })
                                                @Html.ValidationMessageFor(model => model.SenderProvinceID, "", new { @class = "text-danger" })
                                            </div>
                                        </div>



                                        <div class="form-group col-6">
                                            @Html.LabelFor(model => model.SenderOfficeID, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("SenderOfficeID",  null, "-- Select Province --", htmlAttributes: new { @class = "form-control", @id = "SenderOfficeID" })
                                                @Html.ValidationMessageFor(model => model.SenderOfficeID, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group  col-6">
                                            @Html.LabelFor(model => model.SenderAddress, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.SenderAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.SenderAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group  col-6">
                                            @Html.LabelFor(model => model.SenderPhone, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.SenderPhone, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.SenderPhone, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group col-7">
                                            @Html.LabelFor(model => model.ReceiverName, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.ReceiverName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ReceiverName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>



                                        <div class="form-group col-6">
                                            @Html.LabelFor(model => model.ReceiverProvinceID, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("ReceiverProvinceID",  null, "-- Select Province --", htmlAttributes: new { @class = "form-control", @id = "ReceiverProvinceID" })
                                                @Html.ValidationMessageFor(model => model.ReceiverProvinceID, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group col-6">
                                            @Html.LabelFor(model => model.ReceiverOfficeID, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("ReceiverOfficeID",  null, "-- Select Province --", htmlAttributes: new { @class = "form-control", @id = "ReceiverOfficeID" })
                                                @Html.ValidationMessageFor(model => model.ReceiverOfficeID, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group col-6">
                                            @Html.LabelFor(model => model.ReceiverAddress, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.ReceiverAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ReceiverAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group col-6">
                                            @Html.LabelFor(model => model.ReceiverPhone, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.ReceiverPhone, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ReceiverPhone, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>





                                    <div class="row col-lg-12">
                                        <div class="form-group col-lg-4">
                                            @Html.LabelFor(model => model.Distance, htmlAttributes: new { @class = "control-label col-lg-6" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Distance, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group col-lg-4">
                                            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-lg-6" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group col-lg-4">
                                            @Html.LabelFor(model => model.ServiceId, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("ServiceId",  EnumHelper.GetSelectList(typeof(T1809E_PROJECT_SEM3.Models.Service.EnumServiceType)), "-- Select Service --", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ServiceId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group col-4">
                                            @Html.LabelFor(model => model.TypeItemId, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("TypeItemId", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.TypeItemId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group col-4">
                                            <label class="control-label col-lg-8">Price Ship ($)</label>
                                            <div class="col-md-10">

                                                @Html.EditorFor(model => model.PriceShip, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                @Html.ValidationMessageFor(model => model.PriceShip, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group col-4 mt-2">
                                            <label class="control-label col-lg-6"></label>
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="button" value="Calculator Price" id="Cal_Price" class="btn btn-default" />
                                            </div>
                                        </div>
                                        <div class="form-group col-4">
                                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-lg-6" })
                                            <div class="col-md-10">
                                                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group col-12">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" name="save" value="save" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                }

                                <div>
                                    @Html.ActionLink("Back to List", "Index")
                                </div>

                            </div>


                        </div>

                    </div>

                </section>

            </div>

        </div>
    </div>


</div>


@section Scripts
{
    <script type="text/javascript">
        $("#Cal_Price").click(function () {
        
            $.ajax({
                type: "POST",
                url: "../orders/CalPrice",
                data: JSON.stringify({
                    "Distance": $('#Distance').val(),
                    "Weight": $('#Weight').val(),
                    "ServiceId": $('#ServiceId').val(),
                    "TypeItemId": $('#TypeItemId').val(),
                })
                ,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#PriceShip").val(data.PriceShip);
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        });

    </script>
    <script>
        $(document).ready(function () {
            $("#SenderProvinceID").change(function () {
                var provinceID = $(this).val();

                debugger
                $.ajax({
                    type: "post",
                    url: "/Orders/GetOffice?id=" + provinceID,
                    contentType: "html",
                    success: function (response) {
                        debugger
                        $("#SenderOfficeID").empty();
                        $("#SenderOfficeID").append(response);
                    }
                })
            })
        })

        $(document).ready(function () {
            $("#ReceiverProvinceID").change(function () {
                var provinceID = $(this).val();

                debugger
                $.ajax({
                    type: "post",
                    url: "/Orders/GetOffice?id=" + provinceID,
                    contentType: "html",
                    success: function (response) {
                        debugger
                        $("#ReceiverOfficeID").empty();
                        $("#ReceiverOfficeID").append(response);
                    }
                })
            })
        })
    </script>
}



