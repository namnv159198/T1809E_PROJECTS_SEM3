@model PagedList.IPagedList<T1809E_PROJECT_SEM3.Models.Order>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared_Admin/_Layout.cshtml";
    <link rel="stylesheet" href="~/AdminTemplate/assets/css/style.css">
    <link rel="stylesheet" href="~/AdminTemplate/assets/css/cs-skin-elastic.css">
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800' rel='stylesheet' type='text/css'>
    var Iconsort = ViewBag.SortIcon;
}


<div class="breadcrumbs">
    <div class="breadcrumbs-inner">
        <div class="row m-0">
            <div class="col-sm-4">
                <div class="page-header float-left">
                    <div class="page-title">
                        <h1>Order Manage</h1>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="content">
    <div class="wrapper">
        <div class="row">
            <div class="col-sm-12">
                <section class="panel">

                    <div class="panel-body">
                        <div class="card">
                            <div class="card-body">

                                @using (Html.BeginForm("Index", "Orders", FormMethod.Get, new { @name = "search-form" }))
                                {
                                    <div class="row">
                                        <div class="col-md-4">
                                            <p class="padding">
                                                Search By Keyword
                                            </p>
                                            <div class="input-group m-bot15">
                                                <button type="submit" class="btn btn-outline-link">Search <i class="fa fa-search"></i></button>
                                                @Html.TextBox("SearchStringName", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Name. . . " })
                                            </div>
                                        </div>
                                        <div class="col-md-4 .ml-auto">
                                            <p class="padding">
                                                Search By Status
                                            </p>
                                            @Html.DropDownList("status",
                                            EnumHelper.GetSelectList(typeof(T1809E_PROJECT_SEM3.Models.Order.EnumStatusOrder)),
                                            "Select Status",
                                            new { @class = "btn btn-outline-secondary" })
                                        </div>
                                        <div class="col-lg-4 col-md-10">
                                            <div class="pull-left">
                                                <p class="padding">
                                                    Search By Time
                                                </p>
                                                <input type="text" name="daterange" value="" class="form-control fa fa-clock-o" />
                                            </div>
                                        </div>
                                    </div>

                                }
                                <div style="padding-top:20px;">
                                    <p class="btn btn-outline-primary">
                                        @Html.ActionLink("Create New +", "Create")
                                    </p>
                                </div>
                                @if (Model.Count == 0)
                                {
                                    <div style="font-style:italic ; text-align:center ; font-size: 1.2em;" class="padding">
                                        (NO RESULT IS FOUND)
                                    </div>
                                }
                                <table class="table">
                                    <tr>
                                        <th>
                                            ID
                                        </th>
                                        <th>
                                            Service
                                        </th>
                                        @*<th>
            @Html.DisplayNameFor(model => model.UpdatedBy.FullName)
        </th>*@
                                        <th>
                                            Sender Name
                                        </th>
                                        @*<th>
            @Html.DisplayNameFor(model => model.SenderAddress)
        </th>*@
                                        <th>
                                            Sender Phone
                                        </th>
                                        <th>
                                            Receiver Name
                                        </th>
                                        @*<th>
            @Html.DisplayNameFor(model => model.ReceiverAddress)
        </th>*@
                                        <th>
                                            Receiver Phone
                                        </th>

                                        <th>
                                            Distance
                                        </th>
                                        <th>
                                            Weight
                                        </th>
                                        <th>
                                            @Html.ActionLink("Create", "Index", new { sortOrder = ViewBag.StatusSort })
                                            <i class="@Iconsort" aria-hidden="true"></i>

                                        </th>
                                        <th>
                                            Price
                                        </th>
                                        <th>
                                            Type Item
                                        </th>
                                        <th>
                                            Status
                                        </th>

                                        <th>
                                            Action
                                        </th>
                                    </tr>

                                    @foreach (var item in Model)
                                    {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ID)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Service.Type)
                                    </td>
                                    @*<td>
            @Html.DisplayFor(modelItem => item.UpdatedBy.FullName)
        </td>*@
                                    <td>
                                        @Html.DisplayFor(modelItem => item.SenderName)
                                    </td>
                                    @*<td>
            @Html.DisplayFor(modelItem => item.SenderAddress)
        </td>*@
                                    <td>
                                        @Html.DisplayFor(modelItem => item.SenderPhone)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ReceiverName)
                                    </td>
                                    @*<td>
            @Html.DisplayFor(modelItem => item.ReceiverAddress)
        </td>*@
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ReceiverPhone)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Distance)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Weight)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CreateAt)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PriceShip)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TypeItem.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Status)
                                    </td>
                                    <td>
                                        <a href="@Url.Action("Edit", "Orders", new { id = item.ID })" class="btn btn-sm btn-light" style="background-color:lightblue"><i class="fa fa-pencil"></i></a> |
                                        <a href="@Url.Action("Details", "Orders", new { id = item.ID })" class="btn btn-sm btn-light" style="background-color:lightgreen"><i class="fa fa-info-circle"></i></a>  |
                                        <button type="button" class="btn btn-sm btn-danger  " data-toggle="modal" data-target="#myModal_@item.ID">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                        <div class="modal" id="myModal_@item.ID">
                                            <div class="modal-dialog">
                                                <div class="modal-content">

                                                    <!-- Modal Header -->
                                                    <div class="modal-header">
                                                        <h4 class="modal-title">Message</h4>

                                                    </div>

                                                    <!-- Modal body -->
                                                    <div class="modal-body">
                                                        <span>Are your sure delete</span> <span class="text-uppercase" style="text-decoration: underline; font-weight: bold">@item.SenderName </span> ?
                                                    </div>

                                                    <!-- Modal footer -->
                                                    <div class="modal-footer">
                                                        <!-- Cỏntroller -->
                                                        @using (Html.BeginForm("Delete", "Orders", new { id = item.ID }))
                                                        {
                                                            @Html.AntiForgeryToken()
                                                            <input type="submit" value="Delete" class="btn btn-default btn-danger" />
                                                            <input type="button" class=" btn btn-default " data-dismiss="modal" value="Cancel" />
                                                        }


                                                    </div>

                                                </div>





                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                    }

                                </table>
                                <br />
                                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount


                                @Html.PagedListPager(Model, page => Url.Action("Index",
                                    new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, status = ViewBag.Status }))

                            </div>





                        </div>


                    </div>

                </section>

            </div>

        </div>
    </div>
</div>
@section scripts{

    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>

    <script>
        var start = moment().subtract(29, 'days');
        var end = moment();
        var url_string = location.href;
        var url = new URL(url_string);
        // Cắt đoạn biến trong herf
        var initStart = url.searchParams.get("start");
        var initEnd = url.searchParams.get("end");
        var keyword = url.searchParams.get("keyword");
        var sortOrder = url.searchParams.get("sortOrder");
        if (initStart != null && moment(initStart, 'YYYY-MM-DD', true).isValid()) {
            // Gán biến cho start trong thẻ input
            start = initStart;
            $('input[name="start"]').val(start);
        }
        if (initEnd != null && moment(initEnd, 'YYYY-MM-DD', true).isValid()) {
            end = initEnd;
            $('input[name="end"]').val(end);
        }
        if (sortOrder != null) {
            $('input[name="sortOrder"]').val(keyword);
        }
        $('input[name="daterange"]').daterangepicker({
            startDate: start,
            endDate: end,
            locale: {
                format: 'YYYY-MM-DD'
            },
            ranges: {
                'Hôm Nay': [moment(), moment()],
                'Hôm Qua': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                '7 Ngày Trước': [moment().subtract(6, 'days'), moment()],
                '30 Ngày Trước': [moment().subtract(29, 'days'), moment()],
                'Tháng Này': [moment().startOf('month'), moment().endOf('month')],
                'Tháng Trước': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        });
        $('input[name="daterange"]').on('apply.daterangepicker',
            function (ev, picker) {
                var startDate = picker.startDate.format('YYYY-MM-DD');
                var endDate = picker.endDate.format('YYYY-MM-DD');
                $('input[name="start"]').val(startDate);
                $('input[name="end"]').val(endDate);
                $('form[name="search-form"]').submit();
            });
        $('select[name="status"]').change(function () {
            $('form[name="search-form"]').submit();
        });
        $('select[name="gender"]').change(function () {
            $('form[name="search-form"]').submit();
        });
    </script>

}