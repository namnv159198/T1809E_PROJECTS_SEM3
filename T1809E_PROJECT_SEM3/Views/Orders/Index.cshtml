@model PagedList.IPagedList<T1809E_PROJECT_SEM3.Models.Order>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared_Admin/_Layout.cshtml";
    <link rel="stylesheet" href="~/AdminTemplate/assets/css/style.css">
    <link rel="stylesheet" href="~/AdminTemplate/assets/css/cs-skin-elastic.css">
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800' rel='stylesheet' type='text/css'>
    var Iconsort = ViewBag.SortIcon;
}


<div class="breadcrumbs">
    <div class="breadcrumbs-inner">
        <div class="row m-0">
            <div class="col-sm-4">
                <div class="page-header float-left">
                    <div class="page-title">
                        <h1 style="line-height:40px">Order Manage</h1>
                    </div>
                </div>
            </div>
            <div class="col-sm-8">
                <div class="page-header float-right">
                    <div class="page-title">
                        <ol class="breadcrumb text-right">
                            <div class="btn-group">
                                <a href="@Url.Action("Create", "Orders")" class="btn btn-primary">
                                    Create &nbsp;
                                    <i class="fa fa-plus"></i>
                                </a>

                            </div>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="content">
    <div class="animated fadeIn">
        <div class="row">

            <div class="col-md-12">

                <div class="card">
                    <div class="card-header">
                        <strong class="card-title">Order Manage</strong>
                    </div>


                    @using (Html.BeginForm("Index", "Orders", FormMethod.Get, new { @name = "search-form" }))
                    {

                        <input type="hidden" name="start" value="" />
                        <input type="hidden" name="end" value="" />
                        <input type="hidden" name="sortOrder" value="" />
                        <div class="row card-body">

                            <div class="col-sm-4">
                                <label class="text-uppercase"> Search keyword </label>
                                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Input keyword  . . . " })
                            </div>

                            <div class="col-sm-3">
                                <label class="text-uppercase"> Filter Time</label>
                                <input type="text" name="daterange" value="" class="form-control  " />
                            </div>
                            <div class="col-sm-3">
                                <label class="text-uppercase"> Filter Status</label>

                                @Html.DropDownList("status",
                                    EnumHelper.GetSelectList(typeof(T1809E_PROJECT_SEM3.Models.Order.EnumOrderStatus)),
                                    "Select Status",
                                    new { @class = "btn btn-outline-secondary" })
                            </div>
                            <div class="col-sm-1 ">
                                <label class="text-uppercase"> Show </label>
                                @Html.DropDownList("pageSize", null, null, new { @class = "form-control", style = "width: 70px;" })
                            </div>

                            <div class="col-sm-2 ">

                                <div>
                                    <button type="submit" class="btn btn-primary mt-5">
                                        Search
                                    </button>
                                </div>

                            </div>



                        </div>


                        
                    }

                    @if (Model.Count() != 0)
                    {
                        <div class="row card-body">
                            <div class="col-sm-10">
                                @using (Html.BeginForm("CheckList", "Orders", FormMethod.Get, new { @name = "checklist-form" }))
                                {

                                <div class="row">
                                    <div class="col-sm-2 mt-4">
                                        <button type="button" id="delete" value="delete" data-toggle="modal" data-target="#myModal_delete" class="btn btn-sm btn-danger rounded-0"><i class="fa fa-trash-o"></i>&nbsp; Delete</button>
                                        <div class="modal" id="myModal_delete">
                                            <div class="modal-dialog">
                                                <div class="modal-content">

                                                    <!-- Modal Header -->
                                                    <div class="modal-header">
                                                        <h4 class="modal-title">Message</h4>

                                                    </div>

                                                    <!-- Modal body -->
                                                    <div class="modal-body">
                                                        <span>Are you sure ?</span>
                                                    </div>

                                                    <!-- Modal footer -->
                                                    <div class="modal-footer">
                                                        <!-- Cỏntroller -->
                                                        <input type="hidden" name="ListCategoryIDs" value="" />
                                                        <input type="submit" value="Delete" class="btn btn-default btn-danger" />
                                                        <input type="button" class=" btn btn-default " data-dismiss="modal" value="Cancel" />
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-3 mt-4">
                                        <input type="hidden" name="ListCategoryIDs" value="" />
                                        @Html.DropDownList("OrdersStatusCheckList", EnumHelper.GetSelectList(typeof(T1809E_PROJECT_SEM3.Models.Order.EnumOrderStatus)), "State transitions", new { @class = "form-control" })

                                    </div>



                                </div>

                                }
                            </div>
                            <div class="col-sm-2 mt-4">
                                @using (Html.BeginForm("ExportToExcel", "orders"))
                                {
                                    <button class="exportExcel form-control btn btn-success fa-border" type="submit">
                                        Print Excel <i class="fa fa-print" aria-hidden="true"></i>
                                    </button>
                                }
                            </div>
                        </div>
                        @*                         <div class="row card-body"> *@
                        @*                             <div class="col-sm-4"> *@
                        @*                                 @using (Html.BeginForm("CheckList", "Orders", FormMethod.Get, new { @name = "checklist-form" })) *@
                        @*                                 { *@
                        @*                                     <input type="hidden" name="ListCategoryIDs" value="" /> *@
                        @*                                     <label class="text-uppercase"> Chuyển đổi trạng thái</label> *@
                        @*                                       } *@
                        @*                             </div> *@
                        @*                         </div> *@


                    }
                    @if (Model.Count == 0)
                    {
                        <div style="font-style: italic; text-align: center; font-size: 1.2em;" class="padding">
                            (NO RESULT IS FOUND)
                        </div>
                    }
                    <div class="card-body">
                        <table class="table table-striped table-bordered">
                            <thead>
                                <tr>

                                    @if (Model.Count() != 0)
                                    {
                                        <th>
                                            <input type="checkbox" id="checkAll" />
                                        </th>
                                    }
                                    <th>
                                        ID
                                    </th>
                                    <th>
                                        Service
                                    </th>
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.UpdatedBy.FullName)
                                        </th>*@
                                    <th>
                                        Sender Name
                                    </th>
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.SenderAddress)
                                        </th>*@
                                    <th>
                                        Sender Phone
                                    </th>
                                    <th>
                                        Receiver Name
                                    </th>
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.ReceiverAddress)
                                        </th>*@
                                    <th>
                                        Receiver Phone
                                    </th>

                                    <th>
                                        Distance (Km)
                                    </th>
                                    <th>
                                        Weight (Kg)
                                    </th>
                                    <th>
                                        @Html.ActionLink("Create", "Index", new { sortOrder = ViewBag.StatusSort })
                                        <i class="@Iconsort" aria-hidden="true"></i>

                                    </th>
                                    <th>
                                        Price
                                    </th>
                                    <th>
                                        Status
                                    </th>
                                    <th>
                                        Action
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" class="checkBox"
                                                   value="@item.ID" />
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ID)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Service.TypeDelivery)
                                        </td>
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.UpdatedBy.FullName)
                                            </td>*@
                                        <td>
                                            @Html.DisplayFor(modelItem => item.SenderName)
                                        </td>
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.SenderAddress)
                                            </td>*@
                                        <td>
                                            @Html.DisplayFor(modelItem => item.SenderPhone)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ReceiverName)
                                        </td>
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.ReceiverAddress)
                                            </td>*@
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ReceiverPhone)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Distance)
                                        </td>
                                        <td>
                                            @String.Format("{0:N0}", (item.Weight))
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.CreateAt)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.PriceShip)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Status)
                                        </td>
                                        <td>
                                            <a href="@Url.Action("Edit", "Orders", new {id = item.ID})" class="btn btn-sm btn-light" style="background-color: lightblue"><i class="fa fa-pencil"></i></a> |
                                            <a href="@Url.Action("Details", "Orders", new {id = item.ID})" class="btn btn-sm btn-light" style="background-color: lightgreen"><i class="fa fa-info-circle"></i></a> |
                                            <button type="button" class="btn btn-sm btn-danger  " data-toggle="modal" data-target="#myModal_@item.ID">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                            <div class="modal" id="myModal_@item.ID">
                                                <div class="modal-dialog">
                                                    <div class="modal-content">

                                                        <!-- Modal Header -->
                                                        <div class="modal-header">
                                                            <h4 class="modal-title">Message</h4>

                                                        </div>

                                                        <!-- Modal body -->
                                                        <div class="modal-body">
                                                            <span>Are your sure delete</span> <span class="text-uppercase" style="text-decoration: underline; font-weight: bold">@item.SenderName </span> ?
                                                        </div>

                                                        <!-- Modal footer -->
                                                        <div class="modal-footer">
                                                            <!-- Cỏntroller -->
                                                            @using (Html.BeginForm("Delete", "Orders", new { id = item.ID }))
                                                            {
                                                                @Html.AntiForgeryToken()
                                                                <input type="submit" value="Delete" class="btn btn-default btn-danger" />
                                                                <input type="button" class=" btn btn-default " data-dismiss="modal" value="Cancel" />
                                                            }


                                                        </div>

                                                    </div>





                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <br />
                        <div class="row m-0">
                            <div class="col-sm-4">
                                <div class="page-header float-left">
                                    <div class="page-title" style="margin-top: 40px">
                                        Showing @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount in @ViewBag.TotalEnity Entity
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <div class="page-header float-right">
                                    <div class="page-title">
                                        <ol class="breadcrumb text-right">
                                            @Html.PagedListPager(Model, page => Url.Action("Index",
                                                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, status = ViewBag.Status }))
                                        </ol>
                                    </div>
                                </div>



                            </div>
                        </div>



                    </div>


                </div>
            </div>


        </div>
    </div>
</div>



@section scripts{
    <script>
        $('select[name="pageSize"]').change(function () {
            $('form[name="search-form"]').submit();
        });


        $('select[name="OrdersStatusCheckList"]').change(function () {
            var selectedIDs = new Array();
            $('input:checkbox.checkBox').each(function () {
                if ($(this).prop('checked')) {
                    selectedIDs.push($(this).val());
                    var listCheckedBoxId = selectedIDs.toString();
                    $('input[name="ListCategoryIDs"]').val(listCheckedBoxId);
                }
            });
            $('form[name="checklist-form"]').submit();
        });

        $(document).ready(function () {

            $("#checkAll").click(function () {
                $(".checkBox").prop('checked',
                    $(this).prop('checked'));
            });

            $("#delete").click(function () {
                var selectedIDs = new Array();
                $('input:checkbox.checkBox').each(function () {
                    if ($(this).prop('checked')) {
                        selectedIDs.push($(this).val());
                        var listCheckedBoxId = selectedIDs.toString();
                        $('input[name="ListCategoryIDs"]').val(listCheckedBoxId);
                    }
                });

            });
        });
        $(document).ready(function () {

            $("#checkAll").click(function () {
                $(".checkBox").prop('checked',
                    $(this).prop('checked'));
            });

            $("#delete").click(function () {
                var selectedIDs = new Array();
                $('input:checkbox.checkBox').each(function () {
                    if ($(this).prop('checked')) {
                        selectedIDs.push($(this).val());
                        var listCheckedBoxId = selectedIDs.toString();
                        $('input[name="ListCategoryIDs"]').val(listCheckedBoxId);
                    }
                });

            });
        });
        $('body').on('click', '.exportExcel', function () {
       
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Print Excel Success',
                showConfirmButton: false,
                timer: 1500
            })
        
        });
    </script>

}
@if ((string)TempData["Message"] == "Success")
{
    <script type="text/javascript">
        Swal.fire({
            position: 'top-end',
            icon: 'success',
            title: 'Created Success ! Please Check Email !',
            showConfirmButton: false,
            timer: 1500
        })
    </script>

}
else if ((string)TempData["message"] == "Delete")
{
    <script type="text/javascript">
        Swal.fire({
            position: 'top-end',
            icon: 'success',
            title: 'Delete Success',
            showConfirmButton: false,
            timer: 1500
        })
    </script>
}
else if ((string)TempData["message"] == "NotFound")
{
    <script type="text/javascript">
        Swal.fire({
            icon: 'warning',
            title: 'Oops ...',
            text: 'NO RESULT IS FOUND  !'
        })
    </script>
}
else if ((string)TempData["message"] == "ChangeStatus")
{
    <script type="text/javascript">
        Swal.fire({
            position: 'top-end',
            icon: 'success',
            title: 'Statue transitions success',
            showConfirmButton: false,
            timer: 1500
        })
    </script>
}